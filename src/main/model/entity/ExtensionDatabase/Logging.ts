import { Column, DataType, Model, Table } from "sequelize-typescript"

export interface LoggingAttributes {
    Id: number
    Username: string
    UserId: string
    Endpoint: string
    StatusCode: number
    CreatedAt: Date
}

type LoggingAutoGeneratedAttributes = "Id" | "CreatedAt"
export type LoggingCreationAttributes = Omit<LoggingAttributes, LoggingAutoGeneratedAttributes>

@Table({
    freezeTableName: true,
    tableName: "Logging",
    createdAt: "CreatedAt",
    updatedAt: false,
    paranoid: false,
    schema: "public"
})
class Logging extends Model<LoggingAttributes | LoggingCreationAttributes> implements LoggingAttributes {
    @Column({
        allowNull: false,
        type: DataType.BIGINT,
        autoIncrement: true,
        primaryKey: true
    })
    Id!: number

    @Column({
        allowNull: false,
        type: DataType.STRING
    })
    Username!: string

    @Column({
        allowNull: false,
        type: DataType.UUID
    })
    UserId!: string

    @Column({
        allowNull: false,
        type: DataType.STRING
    })
    Endpoint!: string

    @Column({
        allowNull: false,
        type: DataType.INTEGER
    })
    StatusCode!: number

    @Column({
        allowNull: false,
        type: DataType.DATE
    })
    CreatedAt!: Date
}

export default Logging